name: BuildAndDeploy

on:
  push:
    branches: [ master ]

jobs:
  build-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Container & Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: polarizedions/disquotes-api/disquotes-api
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 
          registry: docker.pkg.github.com
          tag: "latest,v2,v2.${{ github.run_number }}"
          dockerfile: ./QuotesApi/Dockerfile

  build-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Container & Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: polarizedions/disquotes-api/disquotes-bot
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: "latest,v2,v2.${{ github.run_number }}"
          dockerfile: ./QuotesBot/Dockerfile

  build-core:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Container & Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: polarizedions/disquotes-api/disquotes-core
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: "latest,v2,v2.${{ github.run_number }}"
          dockerfile: ./QuotesCore/Dockerfile

  build-scheduler:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Container & Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: polarizedions/disquotes-api/disquotes-scheduler
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: "latest,v2,v2.${{ github.run_number }}"
          dockerfile: ./QuotesScheduler/Dockerfile
